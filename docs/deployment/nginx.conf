# nginx.conf cho Docker Compose - SINGLE PORT SOLUTION
events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    # Rate limiting để bảo vệ API
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    
    upstream backend {
        server api:80;  # Container name của API
    }
    
    upstream frontend {
        server frontend:80;  # Container name của Frontend
    }
    
    server {
        listen 80;
        server_name localhost;
        
        # API Routes - tất cả request bắt đầu với /api
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS headers
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }
        
        # Static files và Frontend SPA
        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # SPA fallback - tất cả routes về index.html
            try_files $uri $uri/ /index.html;
        }
        
        # Health check cho monitoring
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}

# ==================== TẠI SAO GIẢI PHÁP NÀY TỐT? ====================
# 
# 1. CHỈ MỘT PORT DUY NHẤT (80 hoặc 443):
#    - User chỉ cần truy cập http://yourdomain.com
#    - Không cần nhớ nhiều port khác nhau
#    - Đơn giản cho cả developer và end-user
#
# 2. ROUTING TỰ ĐỘNG:
#    - /api/* → Backend API
#    - /* → Frontend Application
#    - /health → Health monitoring
#
# 3. BẢO MẬT & PERFORMANCE:
#    - Rate limiting cho API
#    - GZIP compression
#    - CORS headers tự động
#    - Load balancing sẵn sàng
#
# 4. DỄ DÀNG DEPLOY:
#    - docker-compose up -d
#    - Tất cả services chạy với 1 lệnh
#    - Tự động khởi động lại nếu crash
#
# 5. SCALABLE:
#    - Có thể add nhiều backend instances
#    - Frontend caching
#    - Database connection pooling
